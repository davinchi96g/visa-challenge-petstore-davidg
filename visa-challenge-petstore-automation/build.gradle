plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.33'
    id 'org.springframework.boot' version '2.4.2' apply false
}

group = 'net.serenitybdd.starter'
version = '1.0.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

def serenityVersion = '3.6.12'
def restAssuredVersion = '5.3.0'
def logbackVersion = '1.2.10'
def junitVersion = '4.13.2'
def assertjVersion = '3.24.2'
def swaggerVersion = '3.0.0'
def jacksonVersion = '2.12.0'
def hamcrestVersion = '1.3'
def springBootVersion = '2.4.2'
def jfigletVersion = '0.0.3'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework:spring-web"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "com.github.lalyos:jfiglet:${jfigletVersion}"

    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"

    implementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    implementation "io.rest-assured:json-path:${restAssuredVersion}"
    implementation "io.rest-assured:xml-path:${restAssuredVersion}"
    implementation 'io.rest-assured:json-schema-validator:5.3.0'

    implementation "junit:junit:${junitVersion}"
    implementation "org.assertj:assertj-core:${assertjVersion}"
    implementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperty 'junit.jupiter.execution.parallel.enabled', 'false'
    systemProperty 'serenity.parallel.execution.enabled', 'false'
    finalizedBy("customAggregate")
}

tasks.register("customAggregate", JavaExec) {
    group = 'verification'
    description = 'Generates Serenity aggregate reports'
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set("net.serenitybdd.cli.Main")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}